☞ 动画补充：
      1. 一个元素可以同时调用多个动画集，中间使用逗号隔开。

      2. 如果要实现多状态效果，可以将动画集设置为百分比的形式

         百分比指的是相对整个动画执行时间。

         例如：
         @keyframes chnage {

              /* 开始状态 */
              0% {
                  width: 200px;
              }

              /* 结束状态 */
              100% {
                 width: 500px;
              }
         }

☞多背景设置方式: 给一个标签可以同时设置多张背景图。

     方式： 给背景图属性之间使用逗号隔开。

     例如：
         background:     url('bg1.png') no-repeat left top,

                         url('bg2.png') no-repeat right top,
                         
                         url('bg3.png') no-repeat right bottom,
                         
                         url('bg4.png') no-repeat left bottom,
                         
                         url('bg5.png') no-repeat center;

        如果要设置背景颜色，那么可以将背景颜色设置到最后。

☞私有前缀（了解）
       
       作用： 为了解决浏览器对CSS3属性的兼容性

       前缀介绍：
           
           -ms-     兼容IE浏览器

           -moz-    兼容火狐浏览器

           -webkit- 兼容谷歌,苹果...

           -o-      兼容欧朋浏览器


        例如：

            -webkit-transition:all 1s; 
            -moz-transition:all 1s; 
            -ms-transition:all 1s; 
            -o-transition:all 1s; 
            transition:all 1s; 



☞渐变：背景色（背景图片）


      1. 线性渐变：

           组成：
                ✔ 渐变的开始颜色

                ✔ 渐变的结束颜色

                ✔ 渐变的方向

                      ☞ to + 方位名称设置

                      ☞ 通过角度的方式设置渐变的方向

                         0deg  ----> 就是从下向上渐变

                         90deg   ----> 渐变方向是从左向右

                      

                ✔ 渐变的范围  (百分比)

                    注意：
                        1. 默认设置的百分比是相对盒子的宽度或高度的百分比

                        2. 如果设置了background-size以后，那么百分比是相对background-size值的大小。

                        
           background-image: linear-gradient()


           例如：

            background-image: linear-gradient(
                     
                    /* 设置渐变的方向 */

                    to right,

                    /* 开始颜色 */
                    purple,

                    /* 结束颜色 */
                    blue

              );


      
      
      2. 径向渐变：

           组成：
               ✔ 开始颜色和结束颜色

               ✔ 确定渐变中心点的位置

               ✔ 渐变的范围（半径）

            写法：

             background-image: radial-gradient();


             例如:

              background-image: radial-gradient(

                   100px  at  center,

                   red,

                   yellow

              );


移动web页面开发：页面适配【不能输出水平滚动条，网页中不能出现缩放效果】

页面适配的第一种解决方案： 通过流式布局（百分比布局） + 视口适配（meta标签）


☞屏幕
    1. 屏幕大小： 寸   5.5寸 （屏幕对角线长度）

    2. 屏幕分辨率
           
           ✔ 屏幕分辨率： 屏幕生产商规定一个单位（衡量屏幕渲染画质的好坏）

           ✔ 物理分辨率： 指的就是当前设备的大小（宽度 + 高度）【与写代码有联系的】

    3. 物理像素和CSS像素：

           物理像素： 绝对单位

           CSS像素： 相对单位 （受设备影响，屏幕缩放影响）

    4. 像素密度（PPI）:   每英寸中能够容纳的像素点个数

        像素密度越大，屏幕画质越细腻。

    5. 设备独立像素（dpr）： 指的就是一个设备自己独有的比例关系
           
        每台设备具有的一个固定比例值，目的为了保证适配效果。

    6. 2倍图： 将图片在原来大小的基础上扩大2倍

         解决图片在不同设备只用能够正常预览




☞如何通过代码的形式解决页面适配[水平方向不能出现滚动条，网页不能出现缩放]

☞视口
    1. PC端视口: 浏览器窗口大小

    2. 移动端视口：移动设备的窗口（屏幕大小）

    3. 解决屏幕适配：

          ✔ 不能出现缩放

            通过设置 meta标签

            <meta name="viewport" content="width=device-width, initial-scale=1">
        
         ✔ 解决页面中不能出现水平滚动条，让父元素的宽度等于当前设备的宽度

            给父元素设置宽度为 100%;